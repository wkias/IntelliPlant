<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.factory.productManage.dao.MaterialGetDao">

	<select id="get" resultType="com.bootdo.factory.productManage.domain.MaterialGetDO">
		select `id`,`plan_id`,`materal_id`,`count`,`is_deleted`,`create_user_id`,`create_time` from material_get where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.factory.productManage.domain.MaterialGetDO">
		select `id`,`plan_id`,`materal_id`,`count`,`is_deleted`,`create_user_id`,`create_time` from material_get
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="planId != null and planId != ''"> and plan_id = #{planId} </if>
		  		  <if test="materalId != null and materalId != ''"> and materal_id = #{materalId} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="isDeleted != null and isDeleted != ''"> and is_deleted = #{isDeleted} </if>
		  		  <if test="createUserId != null and createUserId != ''"> and create_user_id = #{createUserId} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from material_get
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="planId != null and planId != ''"> and plan_id = #{planId} </if>
		  		  <if test="materalId != null and materalId != ''"> and materal_id = #{materalId} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="isDeleted != null and isDeleted != ''"> and is_deleted = #{isDeleted} </if>
		  		  <if test="createUserId != null and createUserId != ''"> and create_user_id = #{createUserId} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.factory.productManage.domain.MaterialGetDO">
		insert into material_get
		(
			`id`, 
			`plan_id`, 
			`materal_id`, 
			`count`, 
			`is_deleted`, 
			`create_user_id`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{planId}, 
			#{materalId}, 
			#{count}, 
			#{isDeleted}, 
			#{createUserId}, 
			#{createTime}
		)
	</insert>

	<update id="useMaterial" parameterType="com.bootdo.factory.productManage.domain.MaterialGetDO">
		update material_get
		<set>
			<if test="count != null">`count` = `count` - #{count}, </if>
		</set>
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="planId != null and planId != ''"> and plan_id = #{planId} </if>
			<if test="materalId != null and materalId != ''"> and materal_id = #{materalId} </if>
			<if test="count != null and count != ''"> and count = #{count} </if>
			<if test="isDeleted != null and isDeleted != ''"> and is_deleted = #{isDeleted} </if>
			<if test="createUserId != null and createUserId != ''"> and create_user_id = #{createUserId} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		</where>
	</update>
	<update id="update" parameterType="com.bootdo.factory.productManage.domain.MaterialGetDO">
		update material_get 
		<set>
			<if test="planId != null">`plan_id` = #{planId}, </if>
			<if test="materalId != null">`materal_id` = #{materalId}, </if>
			<if test="count != null">`count` = #{count}, </if>
			<if test="isDeleted != null">`is_deleted` = #{isDeleted}, </if>
			<if test="createUserId != null">`create_user_id` = #{createUserId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from material_get where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from material_get where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>