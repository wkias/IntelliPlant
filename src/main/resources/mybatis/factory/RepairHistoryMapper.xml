<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.factory.equipmentManage.dao.RepairHistoryDao">

    <select id="get" resultType="com.bootdo.factory.equipmentManage.domain.RepairHistoryDO">
		select `repair_id`,`code`,`repair_date`,`state`,`repair_person`,`description` from equipment_repair_history where repair_id = #{value}
	</select>

    <select id="list" resultType="com.bootdo.factory.equipmentManage.domain.RepairHistoryDO">
        /*select `repair_id`,`code`,`repair_date`,`state`,`repair_person`,`description` from equipment_repair_history*/
        select h.repair_id,h.code,h.repair_date,h.state,h.repair_person,h.description,m.equipment_type,m.name from
        equipment_repair_history h join equipment_manage m
        <where>
            and h.code = m.code
            <if test="repairId != null and repairId != ''">and repair_id = #{repairId}</if>
            <if test="name != null and name != ''">and m.name like CONCAT('%',#{name},'%')</if>
            <if test="searchType != null and searchType != ''">and m.equipment_type = #{searchType}</if>
            <if test="dateBefore != null and dateBefore != ''">AND h.repair_date <![CDATA[>=]]> #{dateBefore}</if>
            <if test="dateLater != null and dateLater != ''">AND h.repair_date <![CDATA[<=]]>#{dateLater}</if>
            <!--<if test="repairDate != null and repairDate != ''"> and repair_date = #{repairDate} </if>-->
            <if test="state != null and state != ''">and state = #{state}</if>
            <if test="repairPerson != null and repairPerson != ''">and repair_person = #{repairPerson}</if>
            <if test="description != null and description != ''">and description = #{description}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by h.repair_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from equipment_repair_history
        <where>
            <if test="repairId != null and repairId != ''">and repair_id = #{repairId}</if>
            <if test="code != null and code != ''">and code = #{code}</if>
             <if test="repairDate != null and repairDate != ''">and repair_date = #{repairDate}</if>
            <if test="state != null and state != ''">and state = #{state}</if>
            <if test="repairPerson != null and repairPerson != ''">and repair_person = #{repairPerson}</if>
            <if test="description != null and description != ''">and description = #{description}</if>
        </where>
    </select>

    <insert id="save" parameterType="com.bootdo.factory.equipmentManage.domain.RepairHistoryDO">
		insert into equipment_repair_history
		(
			`repair_id`, 
			`code`, 
			`repair_date`, 
			`state`, 
			`repair_person`, 
			`description`
		)
		values
		(
			#{repairId}, 
			#{code}, 
			#{repairDate}, 
			#{state}, 
			#{repairPerson}, 
			#{description}
		)
	</insert>

    <update id="update" parameterType="com.bootdo.factory.equipmentManage.domain.RepairHistoryDO">
        update equipment_repair_history
        <set>
            <if test="code != null">`code` = #{code},</if>
            <if test="repairDate != null">`repair_date` = #{repairDate},</if>
            <if test="state != null">`state` = #{state},</if>
            <if test="repairPerson != null">`repair_person` = #{repairPerson},</if>
            <if test="description != null">`description` = #{description}</if>
        </set>
        where repair_id = #{repairId}
    </update>

    <delete id="remove">
		delete from equipment_repair_history where repair_id = #{value}
	</delete>

    <delete id="batchRemove">
        delete from equipment_repair_history where repair_id in
        <foreach item="repairId" collection="array" open="(" separator="," close=")">
            #{repairId}
        </foreach>
    </delete>

</mapper>