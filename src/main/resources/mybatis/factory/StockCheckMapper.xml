<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.factory.warehouseManagement.dao.StockCheckDao">

	<select id="get" resultType="com.bootdo.factory.warehouseManagement.domain.StockCheckDO">
		select `stock_check_id`,`product_id`,`product_name`,`product_type_name`,`quantity`,`weight`,`quantity_unit_name`,`weight_unit_name` from stock_check where stock_check_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.factory.warehouseManagement.domain.StockCheckDO">
		select `stock_check_id`,`product_id`,`product_name`,`product_type_name`,`quantity`,`weight`,`quantity_unit_name`,`weight_unit_name` from stock_check
		<where>
			<if test="stockCheckId != null and stockCheckId != ''"> and stock_check_id = #{stockCheckId} </if>
			<if test="productId != null and productId != ''"> and product_id = #{productId} </if>
			<if test="productName != null and productName != ''"> and product_name like CONCAT('%',#{productName},'%') </if>
			<if test="productTypeName != null and productTypeName != ''"> and product_type_name like CONCAT('%',#{productTypeName},'%') </if>
			<if test="quantity != null and quantity != ''"> and quantity = #{quantity} </if>
			<if test="weight != null and weight != ''"> and weight = #{weight} </if>
			<if test="quantityUnitName != null and quantityUnitName != ''"> and quantity_unit_name = #{quantityUnitName} </if>
			<if test="weightUnitName != null and weightUnitName != ''"> and weight_unit_name = #{weightUnitName} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by stock_check_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from stock_check
		<where>
			<if test="stockCheckId != null and stockCheckId != ''"> and stock_check_id = #{stockCheckId} </if>
			<if test="productId != null and productId != ''"> and product_id = #{productId} </if>
			<if test="productName != null and productName != ''"> and product_name = #{productName} </if>
			<if test="productTypeName != null and productTypeName != ''"> and product_type_name = #{productTypeName} </if>
			<if test="quantity != null and quantity != ''"> and quantity = #{quantity} </if>
			<if test="weight != null and weight != ''"> and weight = #{weight} </if>
			<if test="quantityUnitName != null and quantityUnitName != ''"> and quantity_unit_name = #{quantityUnitName} </if>
			<if test="weightUnitName != null and weightUnitName != ''"> and weight_unit_name = #{weightUnitName} </if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.factory.warehouseManagement.domain.StockCheckDO">
		insert into stock_check
				(
						`stock_check_id`,
						`product_id`,
						`product_name`,
						`product_type_name`,
						`quantity`,
						`weight`,
						`quantity_unit_name`,
						`weight_unit_name`
						)
		values
			   (
					   #{stockCheckId},
					   #{productId},
					   #{productName},
					   #{productTypeName},
					   #{quantity},
					   #{weight},
					   #{quantityUnitName},
					   #{weightUnitName}
					   )
	</insert>
	 
	<update id="update" parameterType="com.bootdo.factory.warehouseManagement.domain.StockCheckDO">
		update stock_check
		<set>
			<if test="productId != null">`product_id` = #{productId}, </if>
			<if test="productName != null">`product_name` = #{productName}, </if>
			<if test="productTypeName != null">`product_type_name` = #{productTypeName}, </if>
			<if test="quantity != null">`quantity` = #{quantity}, </if>
			<if test="weight != null">`weight` = #{weight}, </if>
			<if test="quantityUnitName != null">`quantity_unit_name` = #{quantityUnitName}, </if>
			<if test="weightUnitName != null">`weight_unit_name` = #{weightUnitName}</if>
		</set>
		where stock_check_id = #{stockCheckId}
	</update>

	<delete id="remove">
		delete from stock_check where stock_check_id = #{value}
	</delete>

	<delete id="removeByProduct">
		delete from stock_check where product_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from stock_check where stock_check_id in
		<foreach item="stockCheckId" collection="array" open="(" separator="," close=")">
			#{stockCheckId}
		</foreach>
	</delete>

</mapper>