<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.factory.reimburse.dao.PaymentRequestDao">

	<select id="get" resultType="com.bootdo.factory.reimburse.domain.PaymentRequestDO">
		select `payment_request_id`,`form_number`,`user_id`,`business_reasons`,`remarks`,`claim_amount`,`collection_account`,`bank_name`,`bank_account`,`summary`,`payment_state`,`files`,`is_draft`,`is_deleted`,`create_user_id`,`create_time` from payment_request where payment_request_id = #{value}
	</select>

    <select id="list" resultType="com.bootdo.factory.reimburse.domain.PaymentRequestDO">
        select
        `payment_request_id`,`form_number`,pr.`user_id`,`business_reasons`,`remarks`,`claim_amount`,`collection_account`,`bank_name`,
        `bank_account`,`summary`,`payment_state`,`files`,`is_draft`,`is_deleted`,`create_user_id`,`create_time`,
        su.`name` as 'userName'
        from payment_request pr LEFT JOIN sys_user su on pr.user_id=su.user_id
        <where>
            is_deleted = 0
            <if test="paymentRequestId != null and paymentRequestId != ''">and payment_request_id =
                #{paymentRequestId}
            </if>
            <if test="formNumber != null and formNumber != ''">and form_number like CONCAT('%',#{formNumber},'%')</if>
            <if test="dateBefore != null and dateBefore != ''">AND loan_date <![CDATA[>=]]> #{dateBefore}</if>
            <if test="dateLater != null and dateLater != ''">AND loan_date <![CDATA[<=]]>#{dateLater}</if>
            <if test="userId != null and userId != ''">and pr.user_id = #{userId}</if>
            <if test="businessReasons != null and businessReasons != ''">and business_reasons = #{businessReasons}</if>
            <if test="remarks != null and remarks != ''">and remarks = #{remarks}</if>
            <if test="claimAmount != null and claimAmount != ''">and claim_amount = #{claimAmount}</if>
            <if test="collectionAccount != null and collectionAccount != ''">and collection_account =
                #{collectionAccount}
            </if>
            <if test="bankName != null and bankName != ''">and bank_name = #{bankName}</if>
            <if test="bankAccount != null and bankAccount != ''">and bank_account = #{bankAccount}</if>
            <if test="summary != null and summary != ''">and summary = #{summary}</if>
            <if test="paymentState != null and paymentState != ''">and payment_state = #{paymentState}</if>
            <if test="files != null and files != ''">and files = #{files}</if>
            <if test="isDraft != null and isDraft != ''">and is_draft = #{isDraft}</if>
            <if test="isDeleted != null and isDeleted != ''">and is_deleted = #{isDeleted}</if>
            <if test="createUserId != null and createUserId != ''">and create_user_id = #{createUserId}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>

        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by payment_request_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from payment_request
        <where>
			is_deleted = 0
            <if test="paymentRequestId != null and paymentRequestId != ''">and payment_request_id =
                #{paymentRequestId}
            </if>
            <if test="formNumber != null and formNumber != ''">and form_number = #{formNumber}</if>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            <if test="businessReasons != null and businessReasons != ''">and business_reasons = #{businessReasons}</if>
            <if test="remarks != null and remarks != ''">and remarks = #{remarks}</if>
            <if test="claimAmount != null and claimAmount != ''">and claim_amount = #{claimAmount}</if>
            <if test="collectionAccount != null and collectionAccount != ''">and collection_account =
                #{collectionAccount}
            </if>
            <if test="bankName != null and bankName != ''">and bank_name = #{bankName}</if>
            <if test="bankAccount != null and bankAccount != ''">and bank_account = #{bankAccount}</if>
            <if test="summary != null and summary != ''">and summary = #{summary}</if>
            <if test="paymentState != null and paymentState != ''">and payment_state = #{paymentState}</if>
            <if test="files != null and files != ''">and files = #{files}</if>
            <if test="isDraft != null and isDraft != ''">and is_draft = #{isDraft}</if>
            <if test="isDeleted != null and isDeleted != ''">and is_deleted = #{isDeleted}</if>
            <if test="createUserId != null and createUserId != ''">and create_user_id = #{createUserId}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>
    </select>
	 
	<insert id="save" parameterType="com.bootdo.factory.reimburse.domain.PaymentRequestDO">
		insert into payment_request
		(
			`payment_request_id`, 
			`form_number`, 
			`user_id`, 
			`business_reasons`, 
			`remarks`, 
			`claim_amount`, 
			`collection_account`, 
			`bank_name`, 
			`bank_account`, 
			`summary`, 
			`payment_state`, 
			`files`, 
			`is_draft`, 
			`is_deleted`, 
			`create_user_id`, 
			`create_time`
		)
		values
		(
			#{paymentRequestId}, 
			#{formNumber}, 
			#{userId}, 
			#{businessReasons}, 
			#{remarks}, 
			#{claimAmount}, 
			#{collectionAccount}, 
			#{bankName}, 
			#{bankAccount}, 
			#{summary}, 
			#{paymentState}, 
			#{files}, 
			#{isDraft}, 
			#{isDeleted}, 
			#{createUserId}, 
			#{createTime}
		)
	</insert>

    <update id="update" parameterType="com.bootdo.factory.reimburse.domain.PaymentRequestDO">
        update payment_request
        <set>
            <if test="formNumber != null">`form_number` = #{formNumber},</if>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="businessReasons != null">`business_reasons` = #{businessReasons},</if>
            <if test="remarks != null">`remarks` = #{remarks},</if>
            <if test="claimAmount != null">`claim_amount` = #{claimAmount},</if>
            <if test="collectionAccount != null">`collection_account` = #{collectionAccount},</if>
            <if test="bankName != null">`bank_name` = #{bankName},</if>
            <if test="bankAccount != null">`bank_account` = #{bankAccount},</if>
            <if test="summary != null">`summary` = #{summary},</if>
            <if test="paymentState != null">`payment_state` = #{paymentState},</if>
            <if test="files != null">`files` = #{files},</if>
            <if test="isDraft != null">`is_draft` = #{isDraft},</if>
            <if test="isDeleted != null">`is_deleted` = #{isDeleted},</if>
            <if test="createUserId != null">`create_user_id` = #{createUserId},</if>
            <if test="createTime != null">`create_time` = #{createTime}</if>
        </set>
        where payment_request_id = #{paymentRequestId}
    </update>

	<delete id="remove">
		update payment_request
		<set>
			is_deleted = 1
			where
			payment_request_id = #{paymentRequestId}
		</set>
	</delete>

	<delete id="batchRemove">
		update payment_request
		set is_deleted = 1
		where payment_request_id in
		<foreach item="paymentRequestId" collection="array" open="(" separator="," close=")">
			#{paymentRequestId}
		</foreach>
	</delete>
</mapper>