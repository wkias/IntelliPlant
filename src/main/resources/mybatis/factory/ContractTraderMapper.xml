<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.factory.contractManage.dao.ContractTraderDao">

	<select id="get" resultType="com.bootdo.factory.contractManage.domain.ContractTraderDO">
		select `id`,`contract_id`,`trader_id`,`trader_type`,`contact_person_id`,`deliver_address` from contract_trader where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.factory.contractManage.vo.ContractTraderVO">
		select `id`,`contract_id`,`trader_id`,ccp.`name` as 'contactPersonName',`trader_type`,ct.`contact_person_id` ,`deliver_address` from contract_trader ct
		left join custermer_contact_person ccp on ct.contact_person_id = ccp.contact_person_id
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="contractId != null and contractId != ''"> and contract_id = #{contractId} </if>
		  		  <if test="traderId != null and traderId != ''"> and trader_id = #{traderId} </if>
		  		  <if test="traderType != null and traderType != ''"> and trader_type = #{traderType} </if>
		  		  <if test="contactPersonId != null and contactPersonId != ''"> and contact_person_id = #{contactPersonId} </if>
		  		  <if test="deliverAddress != null and deliverAddress != ''"> and deliver_address = #{deliverAddress} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from contract_trader
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="contractId != null and contractId != ''"> and contract_id = #{contractId} </if>
		  		  <if test="traderId != null and traderId != ''"> and trader_id = #{traderId} </if>
		  		  <if test="traderType != null and traderType != ''"> and trader_type = #{traderType} </if>
		  		  <if test="contactPersonId != null and contactPersonId != ''"> and contact_person_id = #{contactPersonId} </if>
		  		  <if test="deliverAddress != null and deliverAddress != ''"> and deliver_address = #{deliverAddress} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.factory.contractManage.domain.ContractTraderDO">
		insert into contract_trader
		(
			`id`, 
			`contract_id`, 
			`trader_id`, 
			`trader_type`, 
			`contact_person_id`, 
			`deliver_address`
		)
		values
		(
			#{id}, 
			#{contractId}, 
			#{traderId}, 
			#{traderType}, 
			#{contactPersonId}, 
			#{deliverAddress}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.factory.contractManage.domain.ContractTraderDO">
		update contract_trader 
		<set>
			<if test="contractId != null">`contract_id` = #{contractId}, </if>
			<if test="traderId != null">`trader_id` = #{traderId}, </if>
			<if test="traderType != null">`trader_type` = #{traderType}, </if>
			<if test="contactPersonId != null">`contact_person_id` = #{contactPersonId}, </if>
			<if test="deliverAddress != null">`deliver_address` = #{deliverAddress}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from contract_trader where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from contract_trader where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>